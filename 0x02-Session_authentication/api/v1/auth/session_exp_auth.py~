#!/usr/bin/env python3
""" api/v1/auth/session_exp_auth.py """
from flask import request
from typing import List, TypeVar
import os
import datetime
import fnmatch as fn
from api.v1.auth.session_auth import SessionAuth
from datetime import datetime, timedelta


class SessionExpAuth(SessionAuth):
    """ session expr class """
    def __init__(self):
        try:
            self.session_duration = int(os.environ.get('SESSION_DURATION'), 0)
        except Exception:
            self.session_duration = 0
    def create_session(self, user_id=None):
        ses_id = super().create_session(user_id)
        if ses_id is None:
            return None
        session_dict = {
            "user_id": user_id,
            "created_at": datetime.now()
        }
        self.user_id_by_session_id[ses_id] = session_dict
        return ses_id

    def user_id_for_session_id(self, session_id=None):
        """ user id for session id """
        if session_id is None:
            return None
        value = self.user_id_by_session_id.get(session_id, None)
        if value is None:
            return None
        created_at = value.get('created_at', None)
        if self.session_duration == 0:
            return value['user_id']
        
        if created_at is None:
            return None
        exp = created_at + timedelta(seconds=self.session_duration)
        if datetime.now() > exp:
            return None
        return value['user_id']
